1. Address of ith element of array = BASE_ADDRESS + i*(size of data type of array element)
2. Random Access in Array is very fast due to above point
3. Due to under utilization of memory with array we are using Linked List
4. Required more memory as compare to array for same elements due to store address of next node
5. Linked List are utilize memory better than array
6. Linked List element is known as Node
7. A Node has two part - Data and Address of next Node
8. Node Class
    class Node:
        def __init__(self, data: Any, next: Node | None = None) -> None:
            self.data = data
            self.next = next
    node1 = Node(10)
    node2 = Node(20)
    node3 = Node(30)
    node4 = Node(40)
    node1.next = node2
    node2.next = node3
    node3.next = node4
9. First element is known as Head and Last element is known as Tail
10. Random access is not possible in Linked List
11. Access a nth node then you have to traverse till (n-1)th
12. If ask in question that give a Linked List then in majority case its given Head
13. When you start solving question then try to do not touch Head directly. Store head in any temp head and operate on that for move.
14. 